from SCons.Script import *
import os

env = Environment(ENV = os.environ,
                  VLIBDIR='work',
                  VLOGFLAGS='',
                  VSIMFLAGS='-do "add wave -r /*; run -all" -c -onfinish exit -lib $VLIBDIR')

vlog_sources = Glob('*.v') + Glob('*.sv')

test_toplevels = ['top']


# Set up modelsim
vlibdir = Dir(env.subst('$VLIBDIR'))
env.Command(vlibdir,[],"test -e $VLIBDIR  || vlib $VLIBDIR")

# Compile sources (modelsim)
env.Append(BUILDERS = {'vlog' :
                       Builder(action="vlog $VLOGFLAGS $SOURCE",
                               src_suffix=".v")})

def modelsim_compiled(srcfile):

    '''Return the name of (a) compiled file generated by vlog from a
    given source file'''
    
    base = str(srcfile).split('.v')[0]
    return  env.subst('$VLIBDIR')+'/'+base+'/_primary.dat'

for srcfile in vlog_sources:
    env.vlog(modelsim_compiled(srcfile), srcfile)


Default([modelsim_compiled(srcfile) for srcfile in vlog_sources])


# Run simulations (modelsim -- vsim)
def generate_vsim(source,target,env,for_signature):
    top_module = str(target[0]).split('.vsim_log')[0]
    log_fname = top_module + ".vsim_log"
    wlf_fname = top_module + ".wlf"
    return ("vsim $VSIMFLAGS -l %s -wlf %s %s" %(log_fname, wlf_fname, top_module))
env.Append(BUILDERS = {'vsim' : 
                       Builder(generator=generate_vsim)})


tests = []
for toplevel in test_toplevels:
    env.vsim(toplevel+'.vsim_log',[modelsim_compiled(f) for f in vlog_sources])
    tests.append(env.Alias('test-'+ str(toplevel), [toplevel+ '.vsim_log']))

test_a = env.Alias('test',tests)
